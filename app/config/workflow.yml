# Instructions to display a workflow:
# 1. Define workflow below
# 2. Create a controller_route: "/workflow" or "/whatever"
# 3. Create an action inside this controller with its route "/descriptive_route_name"
# 4. Insert only: return $this->render('descriptive_route_name/doc.svg.twig');
# 5. Create empty folder in vies with the corresponding name => "descriptive_route_name"
# 6. Execute: php bin/console workflow:build:svg <workflow_type>.<workflow>
# 7. Call: [host]/[your_app_name]/web/app_dev.php/[controller_route]/[descriptive_route_name]

# Notices:
# Workflow types: (state_machine OR workflow)
# - state_matchines can only contain a single "to" state, but multiple "from" states
# - workflow workflows may have multiple "to" states
framework:
    workflows:
        paypal:
            supports:
                - AppBundle\Entity\Payment\Payment
            type: state_machine
            places:
                # payment status may be reserved in some cases which results in paypal-payment-status => null
                # TODO: implement update of payment status on some event, else payment status will never get out of "reserved" and cannot be processed, even if it should be
                - reserved
                - completed
                - partially_refunded
                - refunded
            initial_place: reserved
            # renames $marking property to
            marking_store:
                type: "single_state" #OR "multiple_state" defines if marking (=> paymentStatus) property is "string" or "json_array"
                arguments:
                    - 'externalProviderPaymentStatus'
            transitions:
                partial_refund:
                    from: completed
                    to: partially_refunded
                additional_partial_refund:
                    from: partially_refunded
                    to: partially_refunded
                final_partial_refund:
                    from: partially_refunded
                    to: refunded
                complete_refund:
                    from: completed
                    to: refunded
        billpay:
            supports:
                - AppBundle\Entity\Payment\Payment
            type: state_machine
            places:
                - inactive
                - activated
                - partially_refunded
                - refunded
            initial_place: inactive
            # renames $marking property to
            marking_store:
                type: "single_state" #OR "multiple_state" defines if marking (=> paymentStatus) property is "string" or "json_array"
                arguments:
                    - 'externalProviderPaymentStatus'
            transitions:
                activate:
                    from: inactive
                    to: activated
                complete_refund:
                    from: activated
                    to: refunded
                partial_refund:
                    from: activated
                    to: partially_refunded
                additional_partial_refund:
                    from: partially_refunded
                    to: partially_refunded
                final_partial_refund:
                    from: partially_refunded
                    to: refunded
        klarna:
            supports:
                - AppBundle\Entity\Payment\Payment
            type: state_machine
            places:
                - inactive
                - activated
                - cancelled
                - partially_refunded
                - refunded
            initial_place: inactive
            # renames $marking property to
            marking_store:
                type: "single_state" #OR "multiple_state" defines if marking (=> paymentStatus) property is "string" or "json_array"
                arguments:
                    - 'externalProviderPaymentStatus'
            transitions:
                activate:
                    from: inactive
                    to: activated
                cancel:
                    from: inactive
                    to: cancelled
                complete_refund:
                    from: activated
                    to: refunded
                partial_refund:
                    from: activated
                    to: partially_refunded
                additional_partial_refund:
                    from: partially_refunded
                    to: partially_refunded
                final_partial_refund:
                    from: partially_refunded
                    to: refunded
        refund:
            supports:
                - AppBundle\Entity\Payment\Refund
            type: state_machine
            places:
                - open
                - completed
            initial_place: open
            # renames $marking property to
            marking_store:
                type: "single_state" #OR "multiple_state" defines if marking (=> paymentStatus) property is "string" or "json_array"
                arguments:
                    - 'refundStatus'
            transitions:
                complete:
                    from: open
                    to: completed
        order_payment_status:
            supports:
                - AppBundle\Entity\Order\MyOrder
            type: state_machine
            places:
                - open
                - partially_paid
                - paid
            initial_place: open
            marking_store:
                type: "single_state"
                arguments:
                    - 'workflowPaymentStatus'
            transitions:
                partial_payment:
                    from: open
                    to: partially_paid
                complete_payment:
                    from: open
                    to: paid
                final_partial_payment:
                    from: partially_paid
                    to: paid
        order_refund_status:
            supports:
                - AppBundle\Entity\Order\MyOrder
            type: state_machine
            places:
                - open
                - partially_refunded
                - refunded
            initial_place: open
            marking_store:
                type: "single_state"
                arguments:
                    - 'workflowRefundStatus'
            transitions:
                partial_refund:
                    from: open
                    to: partially_refunded
                complete_refund:
                    from: open
                    to: refunded
                final_partial_refund:
                    from: partially_refunded
                    to: refunded
        order_shipping_status:
            supports:
                - AppBundle\Entity\Order\MyOrder
            type: state_machine
            places:
                - unshipped
                - partially_shipped
                - shipped
            initial_place: unshipped
            marking_store:
                type: "single_state"
                arguments:
                    - 'orderStatus'
            transitions:
                ship:
                    from: unshipped
                    to: shipped
                partial_ship:
                    from: unshipped
                    to: partially_shipped
                additional_partial_ship:
                    from: partially_shipped
                    to: partially_shipped
                final_ship:
                    from: partially_shipped
                    to: shipped
                    # change_order scenario:
                    # can only changed, if order-status not completed or cancelled
                change_order:
                    from: shipped
                    to: partially_shipped
        order_return_status:
            supports:
                - AppBundle\Entity\Order\MyOrder
            type: state_machine
            places:
                - impossible
                - possible
                - partially_returned
                - returned
            initial_place: impossible
            marking_store:
                type: "single_state"
                arguments:
                    - 'orderReturnStatus'
            transitions:
                activate:
                    from: impossible
                    to: possible
                partial_return:
                    from: possible
                    to: partially_returned
                return:
                    from: possible
                    to: returned
                additional_partial_return:
                    from: partially_returned
                    to: partially_returned
                final_partial_return:
                    from: partially_returned
                    to: returned
        order_status:
            supports:
                - AppBundle\Entity\Order\MyOrder
            type: state_machine
            places:
                - open
                - cancelled
                - completed
            initial_place: open
            marking_store:
                type: "single_state"
                arguments:
                    - 'orderStatus'
            transitions:
                cancel:
                    from: open
                    to: cancelled
                complete:
                    from: open
                    to: completed
